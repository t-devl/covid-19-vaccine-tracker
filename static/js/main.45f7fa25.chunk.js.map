{"version":3,"sources":["components/Card.js","components/CardsContainer.js","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Card","data","className","name","peoplePartiallyVaccinated","toLocaleString","population","toFixed","peopleVaccinated","CardsContainer","displayedData","map","item","Filter","filterOption","setFilterOption","value","onChange","e","target","App","useState","sovereignStates","setSovereignStates","setUnitedKingdom","setEuropeanUnion","continents","setContinents","setWorld","setDisplayedData","useEffect","JSON","parse","localStorage","getItem","Date","now","timestamp","unitedKingdom","europeanUnion","world","fetch","then","res","json","Object","keys","forEach","key","push","vaccinesAdministered","All","administered","people_partially_vaccinated","people_vaccinated","continent","location","lastUpdated","updated","arrays","setItem","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45f7fa25.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Card({ data }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"card__name\">{data.name}</h3>\r\n      <p className=\"card__partially-vaccinated\">\r\n        {data.peoplePartiallyVaccinated.toLocaleString()} partially vaccinated{\" \"}\r\n        <span className=\"card__percentage\">\r\n          {data.population\r\n            ? `(${(\r\n                (data.peoplePartiallyVaccinated / data.population) *\r\n                100\r\n              ).toFixed(2)}%)`\r\n            : \"\"}\r\n        </span>\r\n      </p>\r\n      <p className=\"card__fully-vaccinated\">\r\n        {data.peopleVaccinated.toLocaleString()} fully vaccinated{\" \"}\r\n        <span className=\"card__percentage\">\r\n          {data.population\r\n            ? `(${((data.peopleVaccinated / data.population) * 100).toFixed(\r\n                2\r\n              )}%)`\r\n            : \"\"}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default function CardsContainer({ displayedData }) {\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {displayedData.map((item) => (\r\n        <Card key={item.name} data={item}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Filter({ filterOption, setFilterOption }) {\r\n  return (\r\n    <div className=\"filter\">\r\n      <label className=\"filter__label\">Vaccines administered by:</label>\r\n      <select\r\n        className=\"filter__select\"\r\n        value={filterOption}\r\n        onChange={(e) => setFilterOption(e.target.value)}\r\n      >\r\n        <option className=\"filter__option\">Sovereign state</option>\r\n        <option className=\"filter__option\">Continent</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport CardsContainer from \"./components/CardsContainer\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nfunction App() {\r\n  const [filterOption, setFilterOption] = useState(\"\");\r\n  const [sovereignStates, setSovereignStates] = useState([]);\r\n  const [unitedKingdom, setUnitedKingdom] = useState([]);\r\n  const [europeanUnion, setEuropeanUnion] = useState([]);\r\n  const [continents, setContinents] = useState([]);\r\n  const [world, setWorld] = useState([]);\r\n  const [displayedData, setDisplayedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      JSON.parse(localStorage.getItem(\"covidVaccineData\")) &&\r\n      Date.now() -\r\n        JSON.parse(localStorage.getItem(\"covidVaccineData\")).timestamp <\r\n        60 * 60 * 1000\r\n    ) {\r\n      let data = JSON.parse(localStorage.getItem(\"covidVaccineData\"));\r\n      setSovereignStates([...data.sovereignStates]);\r\n      setUnitedKingdom([...data.unitedKingdom]);\r\n      setEuropeanUnion([...data.europeanUnion]);\r\n      setContinents([...data.continents]);\r\n      setWorld([...data.world]);\r\n      setFilterOption(\"Sovereign state\");\r\n    } else {\r\n      fetch(\"https://covid-api.mmediagroup.fr/v1/vaccines\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          let unitedKingdom = [];\r\n          let europeanUnion = [];\r\n          let sovereignStates = [];\r\n          let continents = [];\r\n          let world = [];\r\n\r\n          Object.keys(data).forEach((key) => {\r\n            switch (key) {\r\n              case \"England\":\r\n              case \"Northern Ireland\":\r\n              case \"Scotland\":\r\n              case \"Wales\":\r\n                unitedKingdom.push({\r\n                  name: key,\r\n                  vaccinesAdministered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_partially_vaccinated,\r\n                  peoplePartiallyVaccinated: data[key].All.people_vaccinated,\r\n                  population: data[key].All.population,\r\n                  continent: data[key].All.continent,\r\n                  location: data[key].All.location,\r\n                  lastUpdated: data[key].All.updated,\r\n                });\r\n                break;\r\n              case \"European Union\":\r\n                europeanUnion.push({\r\n                  name: key,\r\n                  administered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_partially_vaccinated,\r\n                  peoplePartiallyVaccinated: data[key].All.people_vaccinated,\r\n                  lastUpdated: data[key].All.updated,\r\n                  population: data[key].All.population,\r\n                });\r\n                break;\r\n              case \"Europe\":\r\n              case \"North America\":\r\n              case \"South America\":\r\n              case \"Oceania\":\r\n              case \"Asia\":\r\n              case \"Africa\":\r\n                continents.push({\r\n                  name: key,\r\n                  administered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_partially_vaccinated,\r\n                  peoplePartiallyVaccinated: data[key].All.people_vaccinated,\r\n                  lastUpdated: data[key].All.updated,\r\n                });\r\n                break;\r\n              case \"World\":\r\n                world.push({\r\n                  name: key,\r\n                  administered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_partially_vaccinated,\r\n                  peoplePartiallyVaccinated: data[key].All.people_vaccinated,\r\n                  lastUpdated: data[key].All.updated,\r\n                  population: data[\"Global\"].All.population,\r\n                });\r\n                break;\r\n              case \"Global\":\r\n                break;\r\n              default:\r\n                sovereignStates.push({\r\n                  name: key,\r\n                  vaccinesAdministered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_partially_vaccinated,\r\n                  peoplePartiallyVaccinated: data[key].All.people_vaccinated,\r\n                  population: data[key].All.population,\r\n                  continent: data[key].All.continent,\r\n                  location: data[key].All.location,\r\n                  lastUpdated: data[key].All.updated,\r\n                });\r\n                break;\r\n            }\r\n          });\r\n          return {\r\n            sovereignStates,\r\n            unitedKingdom,\r\n            europeanUnion,\r\n            continents,\r\n            world,\r\n          };\r\n        })\r\n        .then((arrays) => {\r\n          setSovereignStates([...arrays.sovereignStates]);\r\n          setUnitedKingdom([...arrays.unitedKingdom]);\r\n          setEuropeanUnion([...arrays.europeanUnion]);\r\n          setContinents([...arrays.continents]);\r\n          setWorld([...arrays.world]);\r\n          setFilterOption(\"Sovereign state\");\r\n\r\n          localStorage.setItem(\r\n            \"covidVaccineData\",\r\n            JSON.stringify({\r\n              ...arrays,\r\n              timestamp: Date.now(),\r\n            })\r\n          );\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filterOption === \"Sovereign state\") {\r\n      setDisplayedData(sovereignStates);\r\n    } else {\r\n      setDisplayedData(continents);\r\n    }\r\n  }, [filterOption]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">COVID-19 Vaccine Tracker</h1>\r\n      <Filter\r\n        filterOption={filterOption}\r\n        setFilterOption={setFilterOption}\r\n      ></Filter>\r\n      <CardsContainer displayedData={displayedData}></CardsContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}