{"version":3,"sources":["components/Regions.js","components/Modal.js","components/Card.js","components/CardsContainer.js","components/Filter.js","components/Sort.js","App.js","reportWebVitals.js","index.js"],"names":["Regions","regions","isRegionsActive","className","Object","keys","map","region","administered","toLocaleString","Modal","data","active","setCardClicked","rank","numberOfCards","useState","isModalActive","setIsModalActive","setIsRegionsActive","useEffect","continent","onClick","e","stopPropagation","previousCard","name","capital","population","nextCard","vaccinesAdministered","peoplePartiallyVaccinated","toFixed","peopleVaccinated","Date","lastUpdated","length","Card","sortOption","cardClicked","CardsContainer","displayedData","item","index","Filter","filterOption","setFilterOption","value","onChange","target","Sort","setSortOption","App","countries","setCountries","setWorld","setDisplayedData","JSON","parse","localStorage","getItem","now","timestamp","world","fetch","then","res","json","forEach","key","push","All","people_vaccinated","people_partially_vaccinated","updated","country","location","capital_city","arrays","setItem","stringify","sortedData","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEe,SAASA,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,sBAAKC,UAAS,kBAAaD,EAAkB,kBAAoB,IAAjE,UACE,oBAAIC,UAAU,iBAAd,oCACCC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,GAAD,OACxB,sBAAkBJ,UAAU,yBAA5B,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,mBAAGJ,UAAU,gCAAb,SACGF,EAAQM,GAAQC,aAAaC,qBAHxBF,SCJH,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,KACAC,EACC,EADDA,cACC,EACyCC,oBAAS,GADlD,mBACMC,EADN,KACqBC,EADrB,OAE6CF,oBAAS,GAFtD,mBAEMd,EAFN,KAEuBiB,EAFvB,KAIDC,qBAAU,WACRF,EAAiBN,KAChB,CAACA,IA8BJ,OACE,qBACET,UAAS,0BACPc,EAAgB,0BAA4B,IAFhD,SAKE,sBACEd,UAAS,gBAAWD,EAAkB,wBAA0B,IADlE,UAGE,yBAAQC,UAAU,gBAAlB,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAoCQ,EAAKU,YACzC,wBAAQlB,UAAU,mBAAmBmB,QAxC5B,SAACC,GAClBA,EAAEC,kBACFN,GAAiB,GACjBL,EAAe,OAqCP,SACE,mBAAGV,UAAU,wCAGjB,sBAAKA,UAAU,qBAAf,UACE,wBACEA,UAAU,mBACVmB,QAAS,SAACC,IAjCD,SAACA,EAAGT,GACvBS,EAAEC,kBACEV,EAAO,GACTD,EAAeC,EAAO,GA+BZW,CAAaF,EAAGT,IAHpB,SAME,mBAAGX,UAAU,mDAEf,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCQ,EAAKe,OACrC,qBAAIvB,UAAU,iBAAd,sBAAyCQ,EAAKgB,WAC9C,oBAAGxB,UAAU,oBAAb,wBACc,IACXQ,EAAKiB,WAAajB,EAAKiB,WAAWnB,iBAAmB,YAG1D,wBACEN,UAAU,mBACVmB,QAAS,SAACC,IA1CL,SAACA,EAAGT,GACnBS,EAAEC,kBACEV,EAAOC,GACTF,EAAeC,EAAO,GAwCZe,CAASN,EAAGT,IAHhB,SAME,mBAAGX,UAAU,0DAInB,qBAAIA,UAAU,cAAd,UACE,qBAAIA,UAAU,mBAAd,oCAC0BQ,EAAKmB,qBAAqBrB,oBAEpD,qBAAIN,UAAU,mBAAd,kCACwB,IACrBQ,EAAKoB,0BAA0BtB,iBAAkB,IACjDE,EAAKiB,WAAL,YAEMjB,EAAKoB,0BAA4BpB,EAAKiB,WACvC,KACAI,QAAQ,GAJb,MAKG,MAEN,qBAAI7B,UAAU,mBAAd,+BACqBQ,EAAKsB,iBAAiBxB,iBAAkB,IAC1DE,EAAKiB,WAAL,YACSjB,EAAKsB,iBAAmBtB,EAAKiB,WAAc,KAAKI,QACpD,GAFL,MAIG,SAGR,oBAAG7B,UAAU,sBAAb,2BACiB,IAAI+B,KAAKvB,EAAKwB,aAAa1B,oBAG3CL,OAAOC,KAAKM,EAAKV,SAASmC,OAAS,EAClC,sBAAKjC,UAAU,oBAAf,UACE,wBAAQA,UAAU,mBAAmBmB,QA9FzB,WAElBH,GADEjB,IA6FI,SACGA,EAAkB,eAAiB,iBAEtC,cAACF,EAAD,CACEC,QAASU,EAAKV,QACdC,gBAAiBA,OAIrB,QC3HK,SAASmC,EAAT,GAOX,IANF1B,EAMC,EANDA,KACA2B,EAKC,EALDA,WACAxB,EAIC,EAJDA,KACAD,EAGC,EAHDA,eACA0B,EAEC,EAFDA,YACAxB,EACC,EADDA,cAEA,OACE,sBACEZ,UAAS,eACLQ,EAAKiB,YAAiD,IAAnCjB,EAAKoB,2BACX,kCAAfO,EAEI,GADA,cAGNhB,QAAS,kBAAMT,EAAeC,IAPhC,UASE,qBAAKX,UAAU,cAAf,SAA8BW,IAC9B,oBAAIX,UAAU,aAAd,SAA4BQ,EAAKe,OACjC,oBAAGvB,UAAU,8BAAb,UACGQ,EAAKmB,qBAAqBrB,iBAD7B,4BAGA,oBAAGN,UAAU,6BAAb,UACGQ,EAAKoB,0BAA0BtB,iBADlC,wBACyE,IACvE,sBAAMN,UAAU,mBAAhB,SACGQ,EAAKiB,WAAL,YAEMjB,EAAKoB,0BAA4BpB,EAAKiB,WACvC,KACAI,QAAQ,GAJb,MAKG,QAGR,oBAAG7B,UAAU,yBAAb,UACGQ,EAAKsB,iBAAiBxB,iBADzB,oBAC4D,IAC1D,sBAAMN,UAAU,mBAAhB,SACGQ,EAAKiB,WAAL,YACSjB,EAAKsB,iBAAmBtB,EAAKiB,WAAc,KAAKI,QACpD,GAFL,MAIG,QAGR,cAACtB,EAAD,CACEC,KAAMA,EACNG,KAAMA,EACNF,OAAQ2B,IAAgBzB,EACxBD,eAAgBA,EAChBE,cAAeA,OCjDR,SAASyB,EAAT,GAAwD,IAA9BC,EAA6B,EAA7BA,cAAeH,EAAc,EAAdA,WAAc,EAC9BtB,mBAAS,MADqB,mBAC7DuB,EAD6D,KAChD1B,EADgD,KAGpE,OACE,qBAAKV,UAAU,kBAAf,SACGsC,EAAcnC,KAAI,SAACoC,EAAMC,GAAP,OACjB,cAACN,EAAD,CAEE1B,KAAM+B,EACNJ,WAAYA,EACZxB,KAAM6B,EAAQ,EACd9B,eAAgBA,EAChB0B,YAAaA,EACbxB,cAAe0B,EAAcL,QANxBM,EAAKhB,WCRL,SAASkB,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAC7C,OACE,sBAAK3C,UAAU,SAAf,UACE,uBAAOA,UAAU,gBAAjB,uCACA,wBACEA,UAAU,iBACV4C,MAAOF,EACPG,SAAU,SAACzB,GAAD,OAAOuB,EAAgBvB,EAAE0B,OAAOF,QAH5C,SAKE,wBAAQ5C,UAAU,iBAAlB,0BCTO,SAAS+C,EAAT,GAA4D,IAA5CZ,EAA2C,EAA3CA,WAAYa,EAA+B,EAA/BA,cAAeN,EAAgB,EAAhBA,aACxD,OACE,sBAAK1C,UAAU,OAAf,UACE,uBAAOA,UAAU,cAAjB,sBACA,yBACEA,UAAU,eACV4C,MAAOT,EACPU,SAAU,SAACzB,GAAD,OAAO4B,EAAc5B,EAAE0B,OAAOF,QAH1C,UAKE,wBAAQ5C,UAAU,eAAlB,gCACA,wBAAQA,UAAU,eAAlB,wCACkB,YAAjB0C,EACC,wBAAQ1C,UAAU,eAAlB,2CAIA,SCoHKiD,MAhIf,WAAgB,IAAD,EAC2BpC,mBAAS,IADpC,mBACN6B,EADM,KACQC,EADR,OAEuB9B,mBAAS,sBAFhC,mBAENsB,EAFM,KAEMa,EAFN,OAGqBnC,mBAAS,IAH9B,mBAGNqC,EAHM,KAGKC,EAHL,OAIatC,mBAAS,IAJtB,mBAICuC,GAJD,aAK6BvC,mBAAS,IALtC,mBAKNyB,EALM,KAKSe,EALT,KA4Gb,OArGApC,qBAAU,WACR,GACEqC,KAAKC,MAAMC,aAAaC,QAAQ,sBAChC1B,KAAK2B,MACHJ,KAAKC,MAAMC,aAAaC,QAAQ,qBAAqBE,UACrD,KACF,CACA,IAAInD,EAAO8C,KAAKC,MAAMC,aAAaC,QAAQ,qBAC3CN,EAAa,YAAI3C,EAAK0C,YACtBE,EAAS,YAAI5C,EAAKoD,QAClBjB,EAAgB,gBAEhBkB,MAAM,gDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACtD,GACL,IAAI0C,EAAY,GACZU,EAAQ,GAmCZ,OAjCA3D,OAAOC,KAAKM,GAAMyD,SAAQ,SAACC,GACzB,OAAQA,GACN,IAAK,QACHN,EAAMO,KAAK,CACT5C,KAAM2C,EACNvC,qBAAsBnB,EAAK0D,GAAKE,IAAI/D,aACpCyB,iBAAkBtB,EAAK0D,GAAKE,IAAIC,kBAChCzC,0BACEpB,EAAK0D,GAAKE,IAAIE,4BAChBtC,YAAaxB,EAAK0D,GAAKE,IAAIG,QAC3B9C,WAAYjB,EAAI,OAAW4D,IAAI3C,aAEjC,MACF,IAAK,SACH,MACF,QAAQ,IAAR,EACuCjB,EAAK0D,GAA7BM,EADf,EACUJ,IAAiBtE,EAD3B,uBAEEoD,EAAUiB,KAAK,CACb5C,KAAM2C,EACNvC,qBAAsB6C,EAAQnE,aAC9ByB,iBAAkB0C,EAAQH,kBAC1BzC,0BACE4C,EAAQF,4BACV7C,WAAY+C,EAAQ/C,WACpBP,UAAWsD,EAAQtD,UACnBuD,SAAUD,EAAQC,SAClBjD,QAASgD,EAAQE,aACjB1C,YAAawC,EAAQD,QACrBzE,QAASA,QAKV,CACLoD,YACAU,YAGHE,MAAK,SAACa,GACLxB,EAAa,YAAIwB,EAAOzB,YACxBE,EAAS,YAAIuB,EAAOf,QACpBjB,EAAgB,WAEhBa,aAAaoB,QACX,mBACAtB,KAAKuB,UAAL,2BACKF,GADL,IAEEhB,UAAW5B,KAAK2B,eAKzB,IAEHzC,qBAAU,WACa,YAAjByB,GACFW,EAAiBH,GAEnBF,EAAc,wBACb,CAACN,IAEJzB,qBAAU,WACR,GAAmB,uBAAfkB,EAAqC,CACvC,IAAM2C,EAAa,YAAIxC,GAAeyC,MAAK,SAACC,EAAGC,GAAJ,OACzCD,EAAEzD,KAAO0D,EAAE1D,KAAO,GAAK,KAEzB8B,EAAiByB,QACZ,GAAmB,+BAAf3C,EAA6C,CACtD,IAAM2C,EAAa,YAAIxC,GAAeyC,MAAK,SAACC,EAAGC,GAAJ,OACzCD,EAAErD,qBAAuBsD,EAAEtD,qBAAuB,GAAK,KAEzD0B,EAAiByB,QACZ,GAAmB,kCAAf3C,EAAgD,CACzD,IAAM2C,EAAa,YAAIxC,GAAeyC,MAAK,SAACC,EAAGC,GAAJ,OACxCD,EAAEvD,WAAauD,EAAEpD,0BAA4BoD,EAAEvD,YAAc,IAC7DwD,EAAExD,WAAawD,EAAErD,0BAA4BqD,EAAExD,YAAc,GAC1D,GACC,KAEP4B,EAAiByB,MAElB,CAAC3C,IAGF,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,sCACA,cAACyC,EAAD,CACEC,aAAcA,EACdC,gBAAiBA,IAEnB,cAACI,EAAD,CACEZ,WAAYA,EACZa,cAAeA,EACfN,aAAcA,IAEhB,cAACL,EAAD,CACEC,cAAeA,EACfH,WAAYA,QCpHL+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e190ae55.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Regions({ regions, isRegionsActive }) {\r\n  return (\r\n    <div className={`regions ${isRegionsActive ? \"regions--active\" : \"\"}`}>\r\n      <h2 className=\"regions__title\">Vaccines administered:</h2>\r\n      {Object.keys(regions).map((region) => (\r\n        <div key={region} className=\"regions__region region\">\r\n          <h3 className=\"region__name\">{region}</h3>\r\n          <p className=\"region__vaccines-administered\">\r\n            {regions[region].administered.toLocaleString()}\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Regions from \"./Regions\";\r\n\r\nexport default function Modal({\r\n  data,\r\n  active,\r\n  setCardClicked,\r\n  rank,\r\n  numberOfCards,\r\n}) {\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const [isRegionsActive, setIsRegionsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsModalActive(active);\r\n  }, [active]);\r\n\r\n  const closeModal = (e) => {\r\n    e.stopPropagation();\r\n    setIsModalActive(false);\r\n    setCardClicked(null);\r\n  };\r\n\r\n  const toggleRegions = () => {\r\n    if (isRegionsActive) {\r\n      setIsRegionsActive(false);\r\n    } else {\r\n      setIsRegionsActive(true);\r\n    }\r\n  };\r\n\r\n  const previousCard = (e, rank) => {\r\n    e.stopPropagation();\r\n    if (rank > 1) {\r\n      setCardClicked(rank - 1);\r\n    }\r\n  };\r\n\r\n  const nextCard = (e, rank) => {\r\n    e.stopPropagation();\r\n    if (rank < numberOfCards) {\r\n      setCardClicked(rank + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal-container ${\r\n        isModalActive ? \"modal-container--active\" : \"\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`modal ${isRegionsActive ? \"modal--regions-active\" : \"\"}`}\r\n      >\r\n        <header className=\"modal__header\">\r\n          <div className=\"modal__top-bar\">\r\n            <span className=\"modal__continent\">{data.continent}</span>\r\n            <button className=\"modal__close-btn\" onClick={closeModal}>\r\n              <i className=\"fas fa-times modal__close-icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal__header-main\">\r\n            <button\r\n              className=\"modal__arrow-btn\"\r\n              onClick={(e) => {\r\n                previousCard(e, rank);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-circle-left modal__arrow-icon\"></i>\r\n            </button>\r\n            <div className=\"modal__header-details\">\r\n              <h2 className=\"modal__country\">{data.name}</h2>\r\n              <h3 className=\"modal__capital\">Capital: {data.capital}</h3>\r\n              <p className=\"modal__population\">\r\n                Population:{\" \"}\r\n                {data.population ? data.population.toLocaleString() : \"N/A\"}\r\n              </p>\r\n            </div>\r\n            <button\r\n              className=\"modal__arrow-btn\"\r\n              onClick={(e) => {\r\n                nextCard(e, rank);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-circle-right modal__arrow-icon\"></i>\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <ul className=\"modal__list\">\r\n          <li className=\"modal__list-item\">\r\n            Vaccines administered: {data.vaccinesAdministered.toLocaleString()}\r\n          </li>\r\n          <li className=\"modal__list-item\">\r\n            Partially vaccinated:{\" \"}\r\n            {data.peoplePartiallyVaccinated.toLocaleString()}{\" \"}\r\n            {data.population\r\n              ? `(${(\r\n                  (data.peoplePartiallyVaccinated / data.population) *\r\n                  100\r\n                ).toFixed(2)}%)`\r\n              : \"\"}\r\n          </li>\r\n          <li className=\"modal__list-item\">\r\n            Fully vaccinated: {data.peopleVaccinated.toLocaleString()}{\" \"}\r\n            {data.population\r\n              ? `(${((data.peopleVaccinated / data.population) * 100).toFixed(\r\n                  2\r\n                )}%)`\r\n              : \"\"}\r\n          </li>\r\n        </ul>\r\n        <p className=\"modal__last-updated\">\r\n          Last updated: {new Date(data.lastUpdated).toLocaleString()}\r\n        </p>\r\n\r\n        {Object.keys(data.regions).length > 0 ? (\r\n          <div className=\"regions-container\">\r\n            <button className=\"view-regions-btn\" onClick={toggleRegions}>\r\n              {isRegionsActive ? \"Hide Regions\" : \"Show Regions\"}\r\n            </button>\r\n            <Regions\r\n              regions={data.regions}\r\n              isRegionsActive={isRegionsActive}\r\n            ></Regions>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"./Modal\";\r\n\r\nexport default function Card({\r\n  data,\r\n  sortOption,\r\n  rank,\r\n  setCardClicked,\r\n  cardClicked,\r\n  numberOfCards,\r\n}) {\r\n  return (\r\n    <div\r\n      className={`card ${\r\n        (!data.population || data.peoplePartiallyVaccinated === 0) &&\r\n        sortOption === \"Highest percentage vaccinated\"\r\n          ? \"card--grey\"\r\n          : \"\"\r\n      }`}\r\n      onClick={() => setCardClicked(rank)}\r\n    >\r\n      <div className=\"card__index\">{rank}</div>\r\n      <h2 className=\"card__name\">{data.name}</h2>\r\n      <p className=\"card__vaccines-administered\">\r\n        {data.vaccinesAdministered.toLocaleString()} vaccines administered\r\n      </p>\r\n      <p className=\"card__partially-vaccinated\">\r\n        {data.peoplePartiallyVaccinated.toLocaleString()} partially vaccinated{\" \"}\r\n        <span className=\"card__percentage\">\r\n          {data.population\r\n            ? `(${(\r\n                (data.peoplePartiallyVaccinated / data.population) *\r\n                100\r\n              ).toFixed(2)}%)`\r\n            : \"\"}\r\n        </span>\r\n      </p>\r\n      <p className=\"card__fully-vaccinated\">\r\n        {data.peopleVaccinated.toLocaleString()} fully vaccinated{\" \"}\r\n        <span className=\"card__percentage\">\r\n          {data.population\r\n            ? `(${((data.peopleVaccinated / data.population) * 100).toFixed(\r\n                2\r\n              )}%)`\r\n            : \"\"}\r\n        </span>\r\n      </p>\r\n      <Modal\r\n        data={data}\r\n        rank={rank}\r\n        active={cardClicked === rank}\r\n        setCardClicked={setCardClicked}\r\n        numberOfCards={numberOfCards}\r\n      ></Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default function CardsContainer({ displayedData, sortOption }) {\r\n  const [cardClicked, setCardClicked] = useState(null);\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {displayedData.map((item, index) => (\r\n        <Card\r\n          key={item.name}\r\n          data={item}\r\n          sortOption={sortOption}\r\n          rank={index + 1}\r\n          setCardClicked={setCardClicked}\r\n          cardClicked={cardClicked}\r\n          numberOfCards={displayedData.length}\r\n        ></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Filter({ filterOption, setFilterOption }) {\r\n  return (\r\n    <div className=\"filter\">\r\n      <label className=\"filter__label\">Vaccines administered by:</label>\r\n      <select\r\n        className=\"filter__select\"\r\n        value={filterOption}\r\n        onChange={(e) => setFilterOption(e.target.value)}\r\n      >\r\n        <option className=\"filter__option\">Country</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Sort({ sortOption, setSortOption, filterOption }) {\r\n  return (\r\n    <div className=\"sort\">\r\n      <label className=\"sort__label\">Sort by:</label>\r\n      <select\r\n        className=\"sort__select\"\r\n        value={sortOption}\r\n        onChange={(e) => setSortOption(e.target.value)}\r\n      >\r\n        <option className=\"sort__option\">Alphabetical (A-Z)</option>\r\n        <option className=\"sort__option\">Most vaccines administered</option>\r\n        {filterOption === \"Country\" ? (\r\n          <option className=\"sort__option\">\r\n            Highest percentage vaccinated\r\n          </option>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport CardsContainer from \"./components/CardsContainer\";\r\nimport Filter from \"./components/Filter\";\r\nimport Sort from \"./components/Sort\";\r\n\r\nfunction App() {\r\n  const [filterOption, setFilterOption] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"Alphabetical (A-Z)\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [world, setWorld] = useState([]);\r\n  const [displayedData, setDisplayedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      JSON.parse(localStorage.getItem(\"covidVaccineData\")) &&\r\n      Date.now() -\r\n        JSON.parse(localStorage.getItem(\"covidVaccineData\")).timestamp <\r\n        60 * 60 * 1000\r\n    ) {\r\n      let data = JSON.parse(localStorage.getItem(\"covidVaccineData\"));\r\n      setCountries([...data.countries]);\r\n      setWorld([...data.world]);\r\n      setFilterOption(\"Country\");\r\n    } else {\r\n      fetch(\"https://covid-api.mmediagroup.fr/v1/vaccines\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          let countries = [];\r\n          let world = [];\r\n\r\n          Object.keys(data).forEach((key) => {\r\n            switch (key) {\r\n              case \"World\":\r\n                world.push({\r\n                  name: key,\r\n                  vaccinesAdministered: data[key].All.administered,\r\n                  peopleVaccinated: data[key].All.people_vaccinated,\r\n                  peoplePartiallyVaccinated:\r\n                    data[key].All.people_partially_vaccinated,\r\n                  lastUpdated: data[key].All.updated,\r\n                  population: data[\"Global\"].All.population,\r\n                });\r\n                break;\r\n              case \"Global\":\r\n                break;\r\n              default:\r\n                const { All: country, ...regions } = data[key];\r\n                countries.push({\r\n                  name: key,\r\n                  vaccinesAdministered: country.administered,\r\n                  peopleVaccinated: country.people_vaccinated,\r\n                  peoplePartiallyVaccinated:\r\n                    country.people_partially_vaccinated,\r\n                  population: country.population,\r\n                  continent: country.continent,\r\n                  location: country.location,\r\n                  capital: country.capital_city,\r\n                  lastUpdated: country.updated,\r\n                  regions: regions,\r\n                });\r\n                break;\r\n            }\r\n          });\r\n          return {\r\n            countries,\r\n            world,\r\n          };\r\n        })\r\n        .then((arrays) => {\r\n          setCountries([...arrays.countries]);\r\n          setWorld([...arrays.world]);\r\n          setFilterOption(\"Country\");\r\n\r\n          localStorage.setItem(\r\n            \"covidVaccineData\",\r\n            JSON.stringify({\r\n              ...arrays,\r\n              timestamp: Date.now(),\r\n            })\r\n          );\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filterOption === \"Country\") {\r\n      setDisplayedData(countries);\r\n    }\r\n    setSortOption(\"Alphabetical (A-Z)\");\r\n  }, [filterOption]);\r\n\r\n  useEffect(() => {\r\n    if (sortOption === \"Alphabetical (A-Z)\") {\r\n      const sortedData = [...displayedData].sort((a, b) =>\r\n        a.name > b.name ? 1 : -1\r\n      );\r\n      setDisplayedData(sortedData);\r\n    } else if (sortOption === \"Most vaccines administered\") {\r\n      const sortedData = [...displayedData].sort((a, b) =>\r\n        a.vaccinesAdministered < b.vaccinesAdministered ? 1 : -1\r\n      );\r\n      setDisplayedData(sortedData);\r\n    } else if (sortOption === \"Highest percentage vaccinated\") {\r\n      const sortedData = [...displayedData].sort((a, b) =>\r\n        (a.population ? a.peoplePartiallyVaccinated / a.population : -1) <\r\n        (b.population ? b.peoplePartiallyVaccinated / b.population : -1)\r\n          ? 1\r\n          : -1\r\n      );\r\n      setDisplayedData(sortedData);\r\n    }\r\n  }, [sortOption]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">COVID-19 Vaccine Tracker</h1>\r\n      <Filter\r\n        filterOption={filterOption}\r\n        setFilterOption={setFilterOption}\r\n      ></Filter>\r\n      <Sort\r\n        sortOption={sortOption}\r\n        setSortOption={setSortOption}\r\n        filterOption={filterOption}\r\n      ></Sort>\r\n      <CardsContainer\r\n        displayedData={displayedData}\r\n        sortOption={sortOption}\r\n      ></CardsContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}